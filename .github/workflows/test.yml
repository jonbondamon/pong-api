name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    
    - name: Run unit tests
      run: |
        python -m pytest tests/ -v --tb=short --disable-warnings -x
        
    - name: Run integration tests (if API key available)
      env:
        B365_API_TOKEN: ${{ secrets.B365_API_TOKEN }}
      run: |
        if [ -n "$B365_API_TOKEN" ]; then
          echo "Running integration tests with real API..."
          python -m pytest tests/test_integration_*.py -v --tb=short --disable-warnings -x -k "not performance"
        else
          echo "Skipping integration tests - no API key configured"
        fi

  lint:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
        
    - name: Run linting
      run: |
        # Check code formatting with black
        black --check tabletennis_api/ tests/ || echo "Black formatting issues found - please run 'black tabletennis_api/ tests/'"
        
        # Check import sorting with isort  
        isort --check-only tabletennis_api/ tests/ || echo "Import sorting issues found - please run 'isort tabletennis_api/ tests/'"
        
        # Run flake8 for critical issues only
        flake8 tabletennis_api/ tests/ --max-line-length=100 --extend-ignore=E203,W503,F401,F841,F541,E712,E741 --select=E9,F63,F7,F82 || echo "Critical linting issues found"

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage pytest-cov
        pip install -e .
        
    - name: Run tests with coverage
      run: |
        python -m pytest tests/ --cov=tabletennis_api --cov-report=xml --cov-report=html --cov-report=term-missing
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false